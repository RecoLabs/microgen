package stringsvc

import (
	"context"
)

// @microgen middleware, logging, grpc, http, recovering, main, error-logging, tracing, caching
// @grpc-addr service.string
// @protobuf github.com/devimteam/microgen/example/protobuf
type StringService interface {
	// @logs-ignore ans, err
	// @cache
	Uppercase(ctx context.Context, stringsMap map[string]string) (ans string, err error)
	// @http-method geT
	// @cache-key text
	// @json-rpc-prefix v1.
	Count(ctx context.Context, text string, symbol string) (count int, positions []int, err error)
	// @logs-len comments
	TestCase(ctx context.Context, comments []*Comment) (tree map[string]int, err error)
}

// Generated by "microgen" tool.
// Struct stringService implements StringService interface.
type stringService struct {
}

func NewStringService() StringService {
	panic("constructor not provided")
}

func (S *stringService) Uppercase(ctx context.Context, stringsMap map[string]string) (ans string, err error) {
	panic("method not provided")
}

func (S *stringService) Count(ctx context.Context, text string, symbol string) (count int, positions []int, err error) {
	panic("method not provided")
}

func (S *stringService) TestCase(ctx context.Context, comments []*Comment) (tree map[string]int, err error) {
	panic("method not provided")
}
