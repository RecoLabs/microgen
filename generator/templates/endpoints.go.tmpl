package synctool

import (
    "github.com/go-kit/kit/endpoint"
    "context"
)

type Endpoints struct {
    {{- range .FuncSignatures}}
    {{.Name}}Endpoint endpoint.Endpoint
    {{- end}}
}

{{range .FuncSignatures}}
// func (e *Endpoints) {{.Name}}({{range .Params}}{{.Name}} {{.Type}}{{end}}) ({{range .Results}}{{.Name}} {{.Type}}{{end}}) {
//     req := GetMSIDRequest{
//         ArchiID: archiID,
//         EntityType: entityType,
//     }
//     resp, err := e.GetMSIDEndpoint(ctx, &req)
//     if err != nil {
//         return "", err
//     }
//     return resp.(*GetMSIDResponse).MSID, resp.(*GetMSIDResponse).Err
// }
//
// func MakeGetMSIDEndpoint(svc SynctoolService) endpoint.Endpoint {
//     return func(ctx context.Context, request interface{}) (response interface{}, err error) {
//         req := request.(*GetMSIDRequest)
//         msid, err := svc.GetMSID(ctx, req.ArchiID, req.EntityType)
//         return &GetMSIDResponse{MSID: msid, Err: err}, nil
//     }
// }
{{end}}