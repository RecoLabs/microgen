// Code generated by mockery v2.10.0. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	write_strategy "github.com/recolabs/microgen/generator/write_strategy"
)

// Template is an autogenerated mock type for the Template type
type Template struct {
	mock.Mock
}

// ChooseStrategy provides a mock function with given fields: ctx
func (_m *Template) ChooseStrategy(ctx context.Context) (write_strategy.Strategy, error) {
	ret := _m.Called(ctx)

	var r0 write_strategy.Strategy
	if rf, ok := ret.Get(0).(func(context.Context) write_strategy.Strategy); ok {
		r0 = rf(ctx)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(write_strategy.Strategy)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context) error); ok {
		r1 = rf(ctx)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DefaultPath provides a mock function with given fields:
func (_m *Template) DefaultPath() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// Prepare provides a mock function with given fields: ctx
func (_m *Template) Prepare(ctx context.Context) error {
	ret := _m.Called(ctx)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context) error); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Render provides a mock function with given fields: ctx
func (_m *Template) Render(ctx context.Context) write_strategy.Renderer {
	ret := _m.Called(ctx)

	var r0 write_strategy.Renderer
	if rf, ok := ret.Get(0).(func(context.Context) write_strategy.Renderer); ok {
		r0 = rf(ctx)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(write_strategy.Renderer)
		}
	}

	return r0
}
